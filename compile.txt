[info] welcome to sbt 1.5.2 (Private Build Java 11.0.15)
[info] loading global plugins from /home/skac/.sbt/1.0/plugins
[info] loading project definition from /home/skac/Documents/projekty/klee/project
[info] loading settings for project klee from build.sbt ...
[info] set current project to klee (in build file:/home/skac/Documents/projekty/klee/)
[info] Executing in batch mode. For better performance use sbt's shell
[info] compiling 44 Scala sources to /home/skac/Documents/projekty/klee/target/scala-2.12/classes ...
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/examples/Example1.scala:37:15: wrong number of type parameters for method drawToFile: [I, M[_]](imgFun: com.github.skac112.klee.Img[I,M], colorFun: com.github.skac112.klee.ColorFun[I], fileName: String, minX: Double, maxX: Double, minY: Double, maxY: Double, width: Int, height: Int)(implicit evidence$1: cats.Monad[M])M[Unit]
[error]     drawToFile[Color](fun(Fill(Color.yellow(.7))), trivialColorFun, "sample39.png", .0, 999.0, .0, 999.0, 1000, 1000)
[error]               ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/flows/vectormaps/LocalLinear.scala:6:85: trait VectorMap takes type parameters
[error] case class LocalLinear(linear: GenericLinear, center: Point, decay: Double) extends VectorMap {
[error]                                                                                     ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/flows/package.scala:86:62: trait VectorMap takes type parameters
[error]   implicit def pointFunToVectorMap(fun: ((Point) => Point)): VectorMap = (p: Point) => fun(p)
[error]                                                              ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/examples/Example2.scala:16:56: value - is not a member of com.github.skac112.klee.flows.vectormaps.LocalLinear
[error]   val motion_eq = LocalLinear(lin, Point(.5, .5), 2.0) - VectorMap.identity
[error]                                                        ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/flows/MotionEqFlow.scala:6:48: trait VectorMap takes type parameters
[error] case class MotionEqFlow(override val motionEq: VectorMap, override val h: Double) extends GenericMotionEqFlow {
[error]                                                ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/flows/GenericMotionEqFlow.scala:11:44: trait Flow takes type parameters
[error] abstract class GenericMotionEqFlow extends Flow {
[error]                                            ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/transforms/displacers/FlowDisplacer.scala:12:48: trait Flow takes type parameters
[error] case class FlowDisplacer[T, M[_]: Monad](flow: Flow, time: Double, override val area: ImgArea = WholeArea()) extends Displacer[T, M] {
[error]                                                ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/examples/Example2.scala:20:26: wrong number of type parameters for method apply: [T, M[_]](flow: <error>, time: Double, area: com.github.skac112.klee.area.img.ImgArea)(implicit evidence$1: cats.Monad[M])com.github.skac112.klee.transforms.displacers.FlowDisplacer[T,M] in object FlowDisplacer
[error]   val fun = FlowDisplacer[Color](dyn_sys, 4.0)
[error]                          ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/images/Lines.scala:22:47: wrong number of type arguments for com.github.skac112.klee.Img, should be 2
[error]                   backgroundColor: T) extends Img[T] {
[error]                                               ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/flows/vectormaps/PolyMap.scala:8:32: trait VectorMap takes type parameters
[error] abstract class PolyMap extends VectorMap {
[error]                                ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/examples/PolyMapExample.scala:14:21: type mismatch;
[error]  found   : com.github.skac112.klee.flows.vectormaps.PolyMap{val initCoeffs: Seq[Seq[com.github.skac112.vgutils.Point]]}
[error]  required: com.github.skac112.vgutils.Point => com.github.skac112.vgutils.Point
[error]   val t = taylorExp(p, Point(2.0, 1.0), 2, 1e-5)
[error]                     ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/flows/GenericMotionEqFlow.scala:17:17: trait VectorMap takes type parameters
[error]   val motionEq: VectorMap
[error]                 ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/flows/GenericMotionEqFlow.scala:34:39: trait VectorMap takes type parameters
[error]   override def timeMap(time: Double): VectorMap = {
[error]                                       ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/flows/GenericMotionEqFlow.scala:38:26: trait VectorMap takes type parameters
[error]     val atomic_time_map: VectorMap = VectorMap.identity.rungeKutta4(motionEq, act_h)
[error]                          ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/flows/GenericMotionEqFlow.scala:39:68: trait VectorMap takes type parameters
[error]     (0 until steps).foldLeft(VectorMap.identity) { case (time_map: VectorMap, i) =>
[error]                                                                    ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/transforms/displizers/Displizer.scala:8:28: wrong number of type arguments for com.github.skac112.klee.LocalImgTrans, should be 3
[error] trait Displizer[T] extends LocalImgTrans[T] {
[error]                            ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/transforms/displizers/Displizer.scala:11:21: trait VectorMap takes type parameters
[error]   def displacement: VectorMap
[error]                     ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/transforms/displizers/Displizer.scala:15:33: wrong number of type arguments for com.github.skac112.klee.Img, should be 2
[error]   override def applyInArea(img: Img[T], p: Point) = {
[error]                                 ^
[error] /home/skac/Documents/projekty/klee/src/main/scala/com/github/skac112/klee/transforms/displizers/QuickDisplazer.scala:7:57: trait VectorMap takes type parameters
[error] case class QuickDisplazer[T](override val displacement: VectorMap,
[error]                                                         ^
[error] 19 errors found
[error] (Compile / compileIncremental) Compilation failed
[error] Total time: 5 s, completed Jul 6, 2022, 4:06:46 PM
